name: Release new docker image to ECR (use for testing ONLY)

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      MAVEN_REPO_PUBLIC_URL:
        required: true
      MAVEN_REPO_SNAPSHOTS_URL:
        required: true
      MAVEN_REPO_RELEASES_URL:
        required: true
      MAVEN_REPO_USER:
        required: true
      MAVEN_REPO_PASS:
        required: true
      DOCKER_REGISTRY_HOST:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Cache local gradle repository
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set env
        run: |
          set -ue ;
          tag=$(echo ${GITHUB_REF#refs/heads/} | cut -c 1-20) ;
          echo "VERSION=$(echo $tag)" >> $GITHUB_ENV ;
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-central-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        run: |
          set -ue ;
          ./gradlew bootBuildImage --parallel --continue --stacktrace \
            -PsympowerMavenRepoPublicUrl=${{ secrets.MAVEN_REPO_PUBLIC_URL }} \
            -PsympowerMavenRepoSnapshotsUrl=${{ secrets.MAVEN_REPO_SNAPSHOTS_URL }} \
            -PsympowerMavenRepoReleasesUrl=${{ secrets.MAVEN_REPO_RELEASES_URL }} \
            -PsympowerMavenRepoUsername=${{ secrets.MAVEN_REPO_USER }} \
            -PsympowerMavenRepoPassword=${{ secrets.MAVEN_REPO_PASS }} \
            -PregistryHost=${{ secrets.DOCKER_REGISTRY_HOST }} \
            -Ptag="${{ env.VERSION }}" ;

      - name: Push Docker Image to Registy
        run: |
          set -ue ;
          for VERSION_FILE in $(find . | grep  .generated-build-info.env) ; do
              echo "Pushing image from definition file: ${VERSION_FILE}"
              source "${VERSION_FILE}" ;
              docker push "${FULL_DOCKER_IMAGE_NAME}" ;
          done

      - name: Upload build results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: results
          retention-days: 1
          path: |
            **/build/reports/**/*
            **/build/libs/**/*
