#Release new docker image to ECR and schema to Nexus (if contains any changes)

name: Release new version

on:
  workflow_call:
    inputs:
      gistID:
        required: true
        type: string
    secrets:
      GIT_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      GIST_SECRET:
        required: true
      MAVEN_REPO_PUBLIC_URL:
        required: true
      MAVEN_REPO_SNAPSHOTS_URL:
        required: true
      MAVEN_REPO_RELEASES_URL:
        required: true
      MAVEN_REPO_USER:
        required: true
      MAVEN_REPO_PASS:
        required: true
      DOCKER_REGISTRY_HOST:
        required: true
      PACT_BROKER_BASE_URL:
        required: true
      PACT_BROKER_USERNAME:
        required: true
      PACT_BROKER_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          set -ue ;
          ./gradlew build integrationTest sonar --parallel --continue --stacktrace \
            -PsympowerMavenRepoPublicUrl=${{ secrets.MAVEN_REPO_PUBLIC_URL }} \
            -PsympowerMavenRepoSnapshotsUrl=${{ secrets.MAVEN_REPO_SNAPSHOTS_URL }} \
            -PsympowerMavenRepoReleasesUrl=${{ secrets.MAVEN_REPO_RELEASES_URL }} \
            -PsympowerMavenRepoUsername=${{ secrets.MAVEN_REPO_USER }} \
            -PsympowerMavenRepoPassword=${{ secrets.MAVEN_REPO_PASS }} \
            -Ppactbroker.url=${{ secrets.PACT_BROKER_BASE_URL }} \
            -Ppactbroker.auth.username=${{ secrets.PACT_BROKER_USERNAME }} \
            -Ppactbroker.auth.password=${{ secrets.PACT_BROKER_PASSWORD }} \
            -Ptag="${GITHUB_SHA::7}" ;

      - name: Set env
        run: |
          set -ue ;
          currentDate=$(date +"%Y.%m.%d.%H.%M") ;
          tag=$(echo $GITHUB_SHA | cut -c 1-7) ;
          echo "VERSION=$(echo $currentDate-$tag)" >> $GITHUB_ENV ;
          echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
        shell: bash

      - name: Check if schema exists
        run: |
          if [ -d "/schema" ]; then
            echo "Directory exists"
            echo "HAS_SCHEMA=true" >> $GITHUB_ENV ;
          else
            echo "Directory does not exist"
            echo "HAS_SCHEMA=false" >> $GITHUB_ENV ;
          fi

      - name: Check for changes in schema
        id: schema-files
        if: ${{ env.HAS_SCHEMA == 'true' }}
        uses: tj-actions/changed-files@v35
        with:
          since_last_remote_commit: "true"
          files: schema/**

#      - name: Print schema changes value
#        run: |
#          set -ue ;
#          echo ${{ steps.schema-files.outputs.any_changed }}
