#Release new docker image to ECR and schema to Nexus (if contains any changes)

name: Release new version

on:
  workflow_call:
    inputs:
      gistID:
        required: true
        type: string
    outputs:
      version:
        description: Version number of the image released to ECR
        value: ${{ jobs.build.outputs.version }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.VERSION }}
    steps:
      - id: setup-build-environment
        name: "Setup build environment"
        uses: sympower/sympower-actions/.github/actions/setup-build-environment@TECH-1140-split-workflow-into-composite-actions
        with:
          secrets: ${{ toJSON(secrets) }}
      - id: format-version
        name: "Format version"
        uses: sympower/sympower-actions/.github/actions/format-version@TECH-1140-split-workflow-into-composite-actions
      - id: run-tests
        name: "Run tests"
        uses: sympower/sympower-actions/.github/actions/run-tests@TECH-1140-split-workflow-into-composite-actions
      - id: code-analysis
        name: "Code analysis"
        uses: sympower/sympower-actions/.github/actions/code-analysis@TECH-1140-split-workflow-into-composite-actions
        with:
          secrets: ${{ toJSON(secrets) }}
      - id: build-and-upload-docker-image
        name: "Build and upload Docker Image"
        if:
          contains('
          refs/heads/main
          refs/heads/master
          ', github.ref)
        uses: sympower/sympower-actions/.github/actions/build-and-upload-docker-image@TECH-1140-split-workflow-into-composite-actions
        with:
          secrets: ${{ toJSON(secrets) }}
          version: ${{ steps.format-version.outputs.version }}
          gistID: ${{ inputs.gistID }}
      - name: Update Service Version Badge
        if:
          contains('
          refs/heads/main
          refs/heads/master
          ', github.ref)
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ inputs.gistID }}
          filename: ${{ env.REPOSITORY_NAME }}-service.json
          label: Service Version
          message: ${{ inputs.version }}
          color: blue
      - id: upload-schema
        name: "Upload schema"
        if:
          contains('
          refs/heads/main
          refs/heads/master
          ', github.ref)
        uses: sympower/sympower-actions/.github/actions/upload-schema@TECH-1140-split-workflow-into-composite-actions
        with:
          version: ${{ steps.format-version.outputs.version }}
          secrets: ${{ toJSON(secrets) }}
          gistID: ${{ inputs.gistID }}
      - id: upload-pacts
        name: "Upload pacts"
        if:
          contains('
          refs/heads/main
          refs/heads/master
          ', github.ref)
        uses: sympower/sympower-actions/.github/actions/upload-pacts@TECH-1140-split-workflow-into-composite-actions
        with:
          version: ${{ steps.format-version.outputs.version }}
      - id: deploy-staging
        name: "Deploy staging"
        if:
          contains('
          refs/heads/main
          refs/heads/master
          ', github.ref)
        uses: sympower/sympower-actions/.github/actions/deploy-staging@TECH-1140-split-workflow-into-composite-actions
        with:
          secrets: ${{ toJSON(secrets) }}
          version: ${{ steps.format-version.outputs.version }}
          default-name: ${{ env.REPOSITORY_NAME }}
      - id: upload-build-artifacts
        name: "Upload build artifacts"
        if: always()
        uses: sympower/sympower-actions/.github/actions/upload-build-artifacts@TECH-1140-split-workflow-into-composite-actions
