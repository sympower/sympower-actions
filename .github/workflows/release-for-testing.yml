#Release new docker image to ECR as well as schema (if contains any changes) to Nexus (use for testing ONLY)

name: Release for testing

on:
  workflow_call:
    outputs:
      version:
        description: Version number of the image released to ECR
        value: ${{ jobs.build.outputs.version }}
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      MAVEN_REPO_PUBLIC_URL:
        required: true
      MAVEN_REPO_SNAPSHOTS_URL:
        required: true
      MAVEN_REPO_RELEASES_URL:
        required: true
      MAVEN_REPO_USER:
        required: true
      MAVEN_REPO_PASS:
        required: true
      DOCKER_REGISTRY_HOST:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set env
        run: |
          set -ue ;
          tag=$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}} | cut -c 1-20 | tr / -) ;
          echo "VERSION=$(echo $tag)" >> $GITHUB_ENV ;
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-central-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        run: |
          set -ue ;
          ./gradlew jib --parallel --continue --stacktrace \
            -Djib.from.platforms=linux/amd64,linux/arm64 \
            -PsympowerMavenRepoPublicUrl="${{ secrets.MAVEN_REPO_PUBLIC_URL }}" \
            -PsympowerMavenRepoSnapshotsUrl="${{ secrets.MAVEN_REPO_SNAPSHOTS_URL }}" \
            -PsympowerMavenRepoReleasesUrl="${{ secrets.MAVEN_REPO_RELEASES_URL }}" \
            -PsympowerMavenRepoUsername="${{ secrets.MAVEN_REPO_USER }}" \
            -PsympowerMavenRepoPassword="${{ secrets.MAVEN_REPO_PASS }}" \
            -PregistryHost="${{ secrets.DOCKER_REGISTRY_HOST }}" \
            -Ptag="${{ env.VERSION }}" ;

      - name: Check if schema exists
        run: |
          if [ -d "/schema" ]; then
            echo "HAS_SCHEMA=true" >> $GITHUB_ENV ;
          else
            echo "HAS_SCHEMA=false" >> $GITHUB_ENV ;
          fi

      - name: Check for changes in schema
        if: env.HAS_SCHEMA == 'true'
        id: schema-files
        uses: tj-actions/changed-files@v39
        with:
          since_last_remote_commit: "true"
          files: schema/**

      - name: Upload schema
        if:
          env.HAS_SCHEMA == 'true'
          && steps.files.outputs.any_modified == 'true'
        run: |
          set -ue ;
          ./gradlew publish --parallel --continue --stacktrace \
            -PsympowerMavenRepoPublicUrl="${{ secrets.MAVEN_REPO_PUBLIC_URL }}" \
            -PsympowerMavenRepoSnapshotsUrl="${{ secrets.MAVEN_REPO_SNAPSHOTS_URL }}" \
            -PsympowerMavenRepoReleasesUrl="${{ secrets.MAVEN_REPO_RELEASES_URL }}" \
            -PsympowerMavenRepoUsername="${{ secrets.MAVEN_REPO_USER }}" \
            -PsympowerMavenRepoPassword="${{ secrets.MAVEN_REPO_PASS }}" \
            -Ptag="${{ env.VERSION }}" ;

      - name: Zip artifacts
        if: always()
        run: |
          set -ue ;
          found_files=$(find . -type f -path "*/build/reports/*" -print)
          
          if [ -n "$found_files" ]; then
            echo "Directory exists, running zip command..."
            echo "$found_files" | xargs zip -r reports.zip
          else
            echo "Directory does not exist, skipping zip command."
          fi

      - name: Upload build results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: results
          retention-days: 1
          path: |
            reports.zip
